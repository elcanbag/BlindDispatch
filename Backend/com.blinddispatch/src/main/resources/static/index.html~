<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>BlindDispatch Client</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@^3/dist/tailwind.min.css" rel="stylesheet" />
</head>
<body class="bg-gray-100">
<div id="app" class="max-w-md mx-auto mt-10">
  <!-- Login Form -->
  <div id="login-view" class="bg-white p-6 rounded shadow">
    <h2 class="text-xl font-bold mb-4">Login</h2>
    <input id="username" type="text" placeholder="Username" class="w-full mb-2 p-2 border rounded" />
    <input id="password" type="password" placeholder="Password" class="w-full mb-4 p-2 border rounded" />
    <button id="login-btn" class="w-full bg-blue-500 text-white p-2 rounded">Login</button>
  </div>

  <!-- Chat View -->
  <div id="chat-view" class="hidden bg-white p-6 rounded shadow">
    <h2 class="text-xl font-bold mb-4">Chat</h2>
    <div class="flex mb-4">
      <input id="user2" type="text" placeholder="Recipient (username or public id)" class="flex-1 p-2 border rounded mr-2" />
      <select id="type" class="p-2 border rounded">
        <option value="username">Username</option>
        <option value="public">Public ID</option>
      </select>
    </div>
    <div id="messages" class="h-64 overflow-auto mb-4 border p-2 rounded bg-gray-50"></div>
    <div class="flex">
      <input id="message-input" type="text" placeholder="Type your message..." class="flex-1 p-2 border rounded mr-2" />
      <button id="send-btn" class="bg-green-500 text-white p-2 rounded">Send</button>
    </div>
  </div>
</div>

<script>
  let token = '';
  document.getElementById('login-btn').onclick = async () => {
    const user = document.getElementById('username').value;
    const pass = document.getElementById('password').value;
    const res = await fetch('http://localhost/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username: user, password: pass })
    });
    if (res.ok) {
      token = await res.text();
      document.getElementById('login-view').classList.add('hidden');
      document.getElementById('chat-view').classList.remove('hidden');
    } else {
      alert('Login failed');
    }
  };

  document.getElementById('send-btn').onclick = async () => {
    const recipient = document.getElementById('user2').value;
    const type = document.getElementById('type').value;
    const content = document.getElementById('message-input').value;
    const body = type === 'public'
            ? { recipientPublicId: parseInt(recipient), content }
            : { recipientUsername: recipient, content };
    const res = await fetch('http://localhost/messages/send', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + token
      },
      body: JSON.stringify(body)
    });
    if (res.ok) {
      loadConversation();
      document.getElementById('message-input').value = '';
    } else alert('Send failed');
  };

  async function loadConversation() {
    const recipient = document.getElementById('user2').value;
    const type = document.getElementById('type').value;
    const url = `http://localhost/messages/conversation?user2=${encodeURIComponent(recipient)}&type=${type}`;
    const res = await fetch(url, {
      headers: { 'Authorization': 'Bearer ' + token }
    });
    const messages = res.ok ? await res.json() : [];
    const container = document.getElementById('messages');
    container.innerHTML = '';
    messages.forEach(msg => {
      const div = document.createElement('div');
      div.classList.add('mb-2');
      div.innerHTML = `<strong>${msg.sender.username || msg.sender.publicId}</strong>: ${msg.content}`;
      container.appendChild(div);
    });
    container.scrollTop = container.scrollHeight;
  }
</script>
</body>
</html>
